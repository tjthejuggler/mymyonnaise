plugins {
    id "com.android.library"
    id "kotlin-android"
    id "com.github.dcendents.android-maven"
    id "com.jfrog.bintray"
    id "com.github.ben-manes.versions"
}

apply from: "../jacoco.gradle"
apply from: "../kotlin-static-analysis.gradle"

def libGroup = "com.ncorti"
def libId = "myonnaise"
def libVersion = "1.0.0"
def siteUrl = "https://github.com/cortinico/myonnaise"
def gitUrl = "https://github.com/cortinico/myonnaise"
def libLicenses = ["MIT"]

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation Libs.kotlinJdk

    implementation Libs.androidXAppCompat

    implementation Libs.rxjava2
    implementation Libs.rxAndroid2

    testImplementation Libs.junit
    testImplementation Libs.mockitoCore
    testImplementation Libs.mockitoKotlin
}


install {
    repositories.mavenInstaller {
        pom.project {
            packaging "aar"
            description = "A RxJava library to access Raw EMG data from your Myo"
            groupId libGroup
            artifactId libId
            version libVersion
            url siteUrl
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
            developers {
                developer {
                    id "cortinico"
                    name "Nicola Corti"
                    email "corti.nico@gmail.com"
                }
            }
            licenses {
                license {
                    name "MIT License"
                    url "https://opensource.org/licenses/MIT"
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = "sources"
}
artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
} catch (ignored) {
    logger.warn("File `local.properties`, not found!. If you\"re running on a CI you can ignore this warning.")
}
version = libVersion
group = libGroup

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ["archives"]
    pkg {
        repo = "maven"
        name = libId
        licenses = libLicenses
        publish = true
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        version {
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
